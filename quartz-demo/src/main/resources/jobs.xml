<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd"
    version="1.8">
    
    <pre-processing-commands>
        <delete-jobs-in-group>*</delete-jobs-in-group>  <!-- clear all jobs in scheduler -->
        <delete-triggers-in-group>*</delete-triggers-in-group> <!-- clear all triggers in scheduler -->
    </pre-processing-commands>
    
    <processing-directives>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this file), overwrite them -->
        <overwrite-existing-data>true</overwrite-existing-data>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this file), and over-write is false, ignore them rather then generating an error -->
        <ignore-duplicates>false</ignore-duplicates> 
    </processing-directives>
    
    <schedule>
	    <job>
	        <name>TestJob1</name>
	        <job-class>pro.scarlet.job.NaiveJob</job-class>
	        <job-data-map>
	            <entry>
	                <key>someKey</key>
	                <value>someValue</value>
	            </entry>
	            <entry>
	                <key>someOtherKey</key>
	                <value>someOtherValue</value>
	            </entry>
                <entry>
                    <key>myParam</key>
                    <value>我的参数</value>
                </entry>
	        </job-data-map>
	    </job>

        <!-- 使用cron类型的触发器 模拟场景为每天晚上10：00 -->
        <trigger>
            <cron>
                <name>TestCronTriggerAtEveryTenPM</name>
                <group></group>
                <job-name>TestJob1</job-name>
                <job-data-map>
                </job-data-map>
                <cron-expression>0 40 21 * * ?</cron-expression>
            </cron>
        </trigger>

    </schedule>    
</job-scheduling-data>

    <!-- 一个快速循环的时间触发器 -->
    <!-- repeat indefinitely  -->
    <!--  every 5 seconds -->
    <!-- <trigger> 
        <simple>
            <name>TestSimpleTrigger1AtFiveSecondInterval</name>
            <job-name>TestJob1</job-name>
            <repeat-count>-1</repeat-count> 
            <repeat-interval>5000</repeat-interval>  
        </simple>
    </trigger> -->